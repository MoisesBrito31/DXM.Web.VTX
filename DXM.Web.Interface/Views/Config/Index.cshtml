@model DXM.VTX.VTX;
@{
    ViewData["Title"] = "Index";
    int log = Model.tickLog / 60;
    System.Text.StringBuilder at = new System.Text.StringBuilder(Convert.ToString(Model.motores[0].alert_tempe));
    at.Replace(',', '.');
    System.Text.StringBuilder avx = new System.Text.StringBuilder(Convert.ToString(Model.motores[0].alert_v_Rms_Vel_X));
    avx.Replace(',', '.');
    System.Text.StringBuilder avz = new System.Text.StringBuilder(Convert.ToString(Model.motores[0].alert_v_Rms_Vel_Z));
    avz.Replace(',', '.');
   
}

<style>
    input {
        max-width: 220px;
    }

    select {
        max-width: 220px;
    }
</style>

<div class="card-title mt-5 mb-5">
    <div class="row mb-5">
        <div class="col text-left">
            <h2>Configuração do DXM</h2>
        </div>
        <div class="col text-right  btn-group">
            <button type="button" class="btn btn-primary disabled" onclick="#">Rede</button>
            <button type="button" class="btn btn-primary " onclick="document.location.href='/config/turno'">Turno</button>
            <button type="button" class="btn btn-primary" onclick="document.location.href='/config/mapIO'">Mapa I/O</button>
            <button type="button" class="btn btn-primary" onclick="document.location.href='/config/DxmConfig'">Programar</button>
            <button type="button" class="btn btn-primary" onclick="document.location.href='/config/reset'">Destravar</button>
            <!--
            <button type="button" class="btn btn-primary" onclick="document.location.href='/config/download?arquivo=sb'">script Download</button>
            <button type="button" class="btn btn-primary" onclick="document.location.href='/config/download?arquivo=xml'">XML Download</button>
                -->
        </div>
    </div>
    <hr>
</div>




<div class="container-fluid">

    <div class="mb-4 mt-4">
        <label>DXM Endereço:</label>
        <div class="form-inline">
            <input type="text" id="endress" name="endress" value="@Model.DXM_Endress" class="mr-3 form-control" />
            <button id="splint" class="btn btn-primary" type="button" onclick="altIp()">
                Salvar
            </button>
        </div>
    </div>

    @if (true)
    {

        <div class="mb-4  mt-4">
            <label for="linhas">Motores:</label>
            <div class="form-inline">
                <input type="number" class="mr-3 form-control" name="linhas" id="linhas" value="@Model.quantidade" />
                <button id="splint2" class="btn btn-primary " onclick="linhaAltera()" type="button">Alterar</button>
            </div>
        </div>

        <div class="mb-4  mt-4">
            <label for="tickLog">intervalo entre logs(min)</label>
            <div class="form-inline">
                <input type="number" class="mr-3 form-control" name="tickLog" id="tickLog" value="@log" />
                <button class="btn btn-primary " onclick="tickAltera()" type="button">Alterar</button>
            </div>
        </div>
        <hr />
        int z = 0;
        if (Model.DXM_Status != "DXM OffLine")
        {
            for (int x = 0; x < Model.quantidade; x++)
            {
                z = x + 1;
                <div class="mb-4 mt-4 form-row">
                    <div class="col-auto mt-3">
                        <p>Nome linha @z : </p>
                        <input type="text" id="l @x" name="l @x" value="@Model.motores[x].nome" class="mr-3 form-control" />
                    </div>
                    <div class="col-auto mt-3">
                        <p>Alerta de Temperatura:</p>
                        <input  id="@x at" class="form-control" value="@at.ToString()" />
                    </div>
                    <div class="col-auto mt-3">
                        <p>Alerta Vibração Eixo X:</p>
                        <input  id="@x avx" class="form-control" value="@avx.ToString()" />

                    </div>
                    <div class="col-auto mt-3">
                        <p>Alerta Vibração Eixo Z:</p>
                        <input  id="@x avz" class="form-control" value="@avz.ToString()" />
                    </div>
                    <div class="col-auto mt-3">
                        <p>ação:</p>
                        <button class="btn btn-primary" type="button" onclick="altnome(@x)">Salvar </button>
                        <button class="btn btn-danger" type="button" onclick="falhaReset()">Reset</button>
                    </div>
                </div>
                <hr />
            }
        }

    }

</div>





<script>

    var editT_p_prog = false



    function altnome(valor) {

        var nome = document.getElementById(`l ${valor}`).value;
        var a_t = document.getElementById(`${valor} at`).value;
        var a_vx = document.getElementById(`${valor} avx`).value;
        var a_vz = document.getElementById(`${valor} avz`).value;
        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                if (re == "ok") {
                    toastr.success("dados armazenados", "Sucesso")
                }
                else {
                    toastr.error(re, "erro")
                }
            }
        }
        xhp.open("Get", `/Config/setLinhaNome?id=${valor}&valor=${nome}&t=${a_t}&vx=${a_vx}&vz=${a_vz}`);
        xhp.send();
    }

    function velAlt(id) {
        document.getElementById(`${id} velo_esp`).value = ""
    }

    function altIp() {
        document.getElementById("splint").innerHTML = "<span class=\"spinner-border spinner-border-sm mr-1\"></span>Alterando...";

        var ip = document.getElementById("endress").value;

        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                setTimeout(document.location.reload(), 10000)
            }
        }
        xhp.open("Get", `/Config/setIp?ip=${ip}`);
        xhp.send();
    }



    function linhaAltera() {
        document.getElementById("splint2").innerHTML = "<span class=\"spinner-border spinner-border-sm mr-1\"></span>Alterando...";
        var valor = document.getElementById("linhas").value
        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                setTimeout(document.location.reload(), 2000)
            }
        }
        xhp.open("Get", "/Config/setLinhas?valor=" + valor);
        xhp.send();
    }

    function tickAltera() {
        var valor = document.getElementById("tickLog").value
        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                setTimeout(document.location.reload(), 2000)
            }
        }
        valor = valor * 60
        xhp.open("Get", "/Config/setTickLog?valor=" + valor);
        xhp.send();
    }

    function agendadoChange(id, x) {
        var valor = document.getElementById(id).value
        var temp = ""
        var temph = ""
        var tempm = ""
        if (valor.indexOf(":") > 0) {

            if (valor.length > 7) {
                temph = `${valor.substr(1, 1)}${valor.substr(5, 1)}`
                tempm = valor.substr(6, 2)
            }
            else {
                temph = valor.substr(0, 2)
                tempm = valor.substr(6, 2)
            }
            temp = `${temph}${tempm}`
            valor = ""
        }

        if (valor != "") {
            for (var x = valor.length; x < 4; x++) {
                temp = `0${temp}`
            }

            temp = temp + valor



            if (temp.length > 4) {
                temp = temp.substring(temp.length - 4, 5)
            }

            temph = temp.substr(0, 2)
            tempm = temp.substr(2, 2)
        }

        temp = `${temph} : ${tempm}`

        if (temp.length < 7) { temp = "" }
        document.getElementById(id).value = temp
        input_h_p_pro[x] = parseInt(temph) * 60 + parseInt(tempm)
        //alert(input_h_p_pro[x])
    }
    function t_p_progBtnF(id) {
        editT_p_prog = true;
        document.getElementById(id).value = ""
    }
    function falhaReset()
    {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                if (re == "ok") {
                    toastr.success("Ação Executada", "Sucesso")
                }
                else {
                    toastr.error(re, "erro")
                }
            }
        }
        xhp.open("Get", `/Config/resetMotor`)
        xhp.send();
    }

</script>
