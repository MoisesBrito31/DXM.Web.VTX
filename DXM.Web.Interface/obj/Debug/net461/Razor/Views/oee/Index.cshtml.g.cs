#pragma checksum "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a2d562f8e375c8583524da602e94d6cda4325e90"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_oee_Index), @"mvc.1.0.view", @"/Views/oee/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/oee/Index.cshtml", typeof(AspNetCore.Views_oee_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\_ViewImports.cshtml"
using DXM.Web.Interface;

#line default
#line hidden
#line 2 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\_ViewImports.cshtml"
using DXM.Web.Interface.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a2d562f8e375c8583524da602e94d6cda4325e90", @"/Views/oee/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3dbfc5f91b30706872d88ad7a7fe2ce93e5d6979", @"/Views/_ViewImports.cshtml")]
    public class Views_oee_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DXM.OEE.OEE>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(21, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
  
    ViewData["Title"] = "OEE";

#line default
#line hidden
            BeginContext(62, 222, true);
            WriteLiteral("\r\n<style>\r\n    p{\r\n        max-width:200px;\r\n    }\r\n</style>\r\n\r\n<div class=\"card-title mt-5 mb-5\">\r\n    <div class=\"row\">\r\n        <div class=\"col text-left\">\r\n            <h2>Fábrica Visão Geral</h2>\r\n        </div>\r\n\r\n\r\n");
            EndContext();
#line 20 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
         if (ViewBag.registrado)
        {

#line default
#line hidden
            BeginContext(329, 100, true);
            WriteLiteral("            <div class=\"col text-right\">\r\n                <h3 id=\"turno\"></h3>\r\n            </div>\r\n");
            EndContext();
#line 25 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(440, 74, true);
            WriteLiteral("    </div>\r\n</div>\r\n\r\n\r\n\r\n<hr>\r\n<div class=\"container-fluid row m-auto\">\r\n");
            EndContext();
#line 33 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
     for (int x = 0; x < Model.Linhas.Count; x++)
    {

#line default
#line hidden
            BeginContext(572, 48, true);
            WriteLiteral("        <div class=\"col-auto\">\r\n            <div");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 620, "\"", 629, 2);
            WriteAttributeValue("", 625, "b", 625, 1, true);
#line 36 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
WriteAttributeValue(" ", 626, x, 627, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(630, 95, true);
            WriteLiteral(" class=\"bg-light text-center border rounded mb-5 p-2\" style=\"min-width:250px; max-width:300px;\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 725, "\"", 773, 3);
            WriteAttributeValue("", 735, "document.location.href=\'/oee/linha/", 735, 35, true);
#line 36 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
WriteAttributeValue("", 770, x, 770, 2, false);

#line default
#line hidden
            WriteAttributeValue("", 772, "\'", 772, 1, true);
            EndWriteAttribute();
            BeginContext(774, 22, true);
            WriteLiteral(">\r\n                <h3");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 796, "\"", 805, 2);
            WriteAttributeValue("", 801, "l", 801, 1, true);
#line 37 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
WriteAttributeValue(" ", 802, x, 803, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(806, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(808, 20, false);
#line 37 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
                         Write(Model.Linhas[x].nome);

#line default
#line hidden
            EndContext();
            BeginContext(828, 27, true);
            WriteLiteral("</h3>\r\n                <div");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 855, "\"", 862, 1);
#line 38 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
WriteAttributeValue("", 860, x, 860, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(863, 31, true);
            WriteLiteral("></div>\r\n                <h4><p");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 894, "\"", 903, 2);
            WriteAttributeValue("", 899, "p", 899, 1, true);
#line 39 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
WriteAttributeValue(" ", 900, x, 901, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(904, 60, true);
            WriteLiteral(" class=\"p-2 rounded border border-dark text-center m-auto\"> ");
            EndContext();
            BeginContext(965, 22, false);
#line 39 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
                                                                                       Write(Model.Linhas[x].Estado);

#line default
#line hidden
            EndContext();
            BeginContext(987, 63, true);
            WriteLiteral("</p>    </h4>            \r\n            </div>\r\n        </div>\r\n");
            EndContext();
#line 42 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
    }

#line default
#line hidden
            BeginContext(1057, 1428, true);
            WriteLiteral(@"



</div>



<script>
    var data;
    var gage = []

    function linhaAltera() {
        var valor = document.getElementById(""linhas"").value
        var xhp = new XMLHttpRequest()
        
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                document.location.reload()
            }
        }
        xhp.open(""Get"", ""/oee/setLinhas?valor="" + valor);
        xhp.send();
    }

    function emula(valor) {
        
        if (valor == 0) {
            valor=1
        }
        else {
            valor=0
        }       

        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
               document.location.reload()
            }
        }
        xhp.open(""Get"", ""/oee/emula?valor=""+valor);
        xhp.send();
    ");
            WriteLiteral(@"}



    var sectors = [{
        color: ""#c00002"",
        lo: 0,
        hi: 20,
    }, {
        color: ""#febf00"",
        lo: 20,
        hi: 40,
    }, {
        color: ""#fdf500"",
        lo: 40,
        hi: 60,
    }, {
        color: ""#92d14f"",
        lo: 60,
        hi: 80,
    }, {
        color: ""#00af50"",
        lo: 80,
        hi: 100,
    }];

    var linhas = ");
            EndContext();
            BeginContext(2486, 16, false);
#line 113 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\oee\Index.cshtml"
            Write(Model.quantidade);

#line default
#line hidden
            EndContext();
            BeginContext(2502, 3017, true);
            WriteLiteral(@"



    for(var x = 0; x < linhas; x++) {
        var a = new JustGage({
            id: (x).toString(),
            value: 0,
            min: 0,
            max: 100,
            title: ""OEE"",
            symbol: '%',
            pointer: true,
            customSectors: sectors,
            relativeGaugeSize: true
        })
        gage.push(a)

    }





    setInterval(function () {
        getlinhas()
        getTurno()
        }, 1000)

    function getlinhas() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                data = JSON.parse(re);
                if (data[0].estado == ""DXM OffLine"") {
                    document.location.href = ""/oee/offline"";
                }
                else {
                    for (x = 0; x < data.length; x++) {
                        document.getElementById(`l ${x}`).inne");
            WriteLiteral(@"rHTML = data[x].nome
                        document.getElementById(`p ${x}`).innerHTML = data[x].estado                        
                        gage[x].refresh(data[x].oee)
                    }
                }

            }
        }
        xhp.open(""Get"", ""/oee/conjunto_linhas"");
        xhp.send();
    }

    function getTurno() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                document.getElementById(""turno"").innerHTML = re;
            }
        }
        xhp.open(""Get"", ""/oee/getTurno"");
        xhp.send();
    }

    

    setInterval(function () {
         for (x = 0; x < data.length; x++) {                       
                  if (data[x].estado == ""Operando"") {
                      document.getElementById(`p ${x}`).setAttribute(""style"", ""color:green"")
                      document.getElementB");
            WriteLiteral(@"yId(`b ${x}`).setAttribute(""class"", ""bg-light text-center border rounded mb-5 p-2"")
                  }
                  if (data[x].estado == ""Parada"") {
                     
                      if (document.getElementById(`b ${x}`).getAttribute(""class"") == ""bg-light text-center border rounded mb-5 p-2"") {
                          document.getElementById(`b ${x}`).setAttribute(""class"", ""bg-danger text-center border rounded mb-5 p-2"")
                           document.getElementById(`p ${x}`).setAttribute(""style"", ""color:white"")
                      }
                      else {
                          document.getElementById(`b ${x}`).setAttribute(""class"", ""bg-light text-center border rounded mb-5 p-2"")
                           document.getElementById(`p ${x}`).setAttribute(""style"", ""color:red"")
                      }
                      
                  }
                  
              }
    }, 500)

</script>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DXM.OEE.OEE> Html { get; private set; }
    }
}
#pragma warning restore 1591
