#pragma checksum "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c0ce11522a74ada19de7a1d04222e2d74a9df7a1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Config_Index), @"mvc.1.0.view", @"/Views/Config/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Config/Index.cshtml", typeof(AspNetCore.Views_Config_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\_ViewImports.cshtml"
using DXM.Web.Interface;

#line default
#line hidden
#line 2 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\_ViewImports.cshtml"
using DXM.Web.Interface.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0ce11522a74ada19de7a1d04222e2d74a9df7a1", @"/Views/Config/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3dbfc5f91b30706872d88ad7a7fe2ce93e5d6979", @"/Views/_ViewImports.cshtml")]
    public class Views_Config_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DXM.VTX.VTX>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
  
    ViewData["Title"] = "Index";
    int log = Model.tickLog / 60;
    System.Text.StringBuilder at = new System.Text.StringBuilder(Convert.ToString(Model.motores[0].alert_tempe));
    at.Replace(',', '.');
    System.Text.StringBuilder avx = new System.Text.StringBuilder(Convert.ToString(Model.motores[0].alert_v_Rms_Vel_X));
    avx.Replace(',', '.');
    System.Text.StringBuilder avz = new System.Text.StringBuilder(Convert.ToString(Model.motores[0].alert_v_Rms_Vel_Z));
    avz.Replace(',', '.');
   

#line default
#line hidden
            BeginContext(544, 1508, true);
            WriteLiteral(@"
<style>
    input {
        max-width: 220px;
    }

    select {
        max-width: 220px;
    }
</style>

<div class=""card-title mt-5 mb-5"">
    <div class=""row mb-5"">
        <div class=""col text-left"">
            <h2>Configuração do DXM</h2>
        </div>
        <div class=""col text-right  btn-group"">
            <button type=""button"" class=""btn btn-primary disabled"" onclick=""#"">Rede</button>
            <button type=""button"" class=""btn btn-primary "" onclick=""document.location.href='/config/turno'"">Turno</button>
            <button type=""button"" class=""btn btn-primary"" onclick=""document.location.href='/config/mapIO'"">Mapa I/O</button>
            <button type=""button"" class=""btn btn-primary"" onclick=""document.location.href='/config/DxmConfig'"">Programar</button>
            <button type=""button"" class=""btn btn-primary"" onclick=""document.location.href='/config/reset'"">Destravar</button>
            <!--
            <button type=""button"" class=""btn btn-primary"" onclick=""document.");
            WriteLiteral(@"location.href='/config/download?arquivo=sb'"">script Download</button>
            <button type=""button"" class=""btn btn-primary"" onclick=""document.location.href='/config/download?arquivo=xml'"">XML Download</button>
                -->
        </div>
    </div>
    <hr>
</div>




<div class=""container-fluid"">

    <div class=""mb-4 mt-4"">
        <label>DXM Endereço:</label>
        <div class=""form-inline"">
            <input type=""text"" id=""endress"" name=""endress""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2052, "\"", 2078, 1);
#line 52 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 2060, Model.DXM_Endress, 2060, 18, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2079, 198, true);
            WriteLiteral(" class=\"mr-3 form-control\" />\r\n            <button id=\"splint\" class=\"btn btn-primary\" type=\"button\" onclick=\"altIp()\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n");
            EndContext();
#line 59 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
     if (true)
    {


#line default
#line hidden
            BeginContext(2302, 211, true);
            WriteLiteral("        <div class=\"mb-4  mt-4\">\r\n            <label for=\"linhas\">Motores:</label>\r\n            <div class=\"form-inline\">\r\n                <input type=\"number\" class=\"mr-3 form-control\" name=\"linhas\" id=\"linhas\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2513, "\"", 2538, 1);
#line 65 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 2521, Model.quantidade, 2521, 17, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2539, 159, true);
            WriteLiteral(" />\r\n                <button id=\"splint2\" class=\"btn btn-primary \" onclick=\"linhaAltera()\" type=\"button\">Alterar</button>\r\n            </div>\r\n        </div>\r\n");
            EndContext();
            BeginContext(2700, 231, true);
            WriteLiteral("        <div class=\"mb-4  mt-4\">\r\n            <label for=\"tickLog\">intervalo entre logs(min)</label>\r\n            <div class=\"form-inline\">\r\n                <input type=\"number\" class=\"mr-3 form-control\" name=\"tickLog\" id=\"tickLog\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2931, "\"", 2943, 1);
#line 73 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 2939, log, 2939, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2944, 161, true);
            WriteLiteral(" />\r\n                <button class=\"btn btn-primary \" onclick=\"tickAltera()\" type=\"button\">Alterar</button>\r\n            </div>\r\n        </div>\r\n        <hr />\r\n");
            EndContext();
#line 78 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
        int z = 0;
        if (Model.DXM_Status != "DXM OffLine")
        {
            for (int x = 0; x < Model.quantidade; x++)
            {
                z = x + 1;

#line default
#line hidden
            BeginContext(3283, 137, true);
            WriteLiteral("                <div class=\"mb-4 mt-4 form-row\">\r\n                    <div class=\"col-auto mt-3\">\r\n                        <p>Nome linha ");
            EndContext();
            BeginContext(3421, 1, false);
#line 86 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
                                 Write(z);

#line default
#line hidden
            EndContext();
            BeginContext(3422, 51, true);
            WriteLiteral(" : </p>\r\n                        <input type=\"text\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 3473, "\"", 3482, 2);
            WriteAttributeValue("", 3478, "l", 3478, 1, true);
#line 87 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue(" ", 3479, x, 3480, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("name", " name=\"", 3483, "\"", 3494, 2);
            WriteAttributeValue("", 3490, "l", 3490, 1, true);
#line 87 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue(" ", 3491, x, 3492, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("value", " value=\"", 3495, "\"", 3525, 1);
#line 87 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 3503, Model.motores[x].nome, 3503, 22, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3526, 193, true);
            WriteLiteral(" class=\"mr-3 form-control\" />\r\n                    </div>\r\n                    <div class=\"col-auto mt-3\">\r\n                        <p>Alerta de Temperatura:</p>\r\n                        <input");
            EndContext();
            BeginWriteAttribute("id", "  id=\"", 3719, "\"", 3730, 2);
#line 91 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 3725, x, 3725, 2, false);

#line default
#line hidden
            WriteAttributeValue(" ", 3727, "at", 3728, 3, true);
            EndWriteAttribute();
            BeginContext(3731, 21, true);
            WriteLiteral(" class=\"form-control\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 3752, "\"", 3774, 1);
#line 91 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 3760, at.ToString(), 3760, 14, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3775, 168, true);
            WriteLiteral(" />\r\n                    </div>\r\n                    <div class=\"col-auto mt-3\">\r\n                        <p>Alerta Vibração Eixo X:</p>\r\n                        <input");
            EndContext();
            BeginWriteAttribute("id", "  id=\"", 3943, "\"", 3955, 2);
#line 95 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 3949, x, 3949, 2, false);

#line default
#line hidden
            WriteAttributeValue(" ", 3951, "avx", 3952, 4, true);
            EndWriteAttribute();
            BeginContext(3956, 21, true);
            WriteLiteral(" class=\"form-control\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 3977, "\"", 4000, 1);
#line 95 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 3985, avx.ToString(), 3985, 15, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4001, 170, true);
            WriteLiteral(" />\r\n\r\n                    </div>\r\n                    <div class=\"col-auto mt-3\">\r\n                        <p>Alerta Vibração Eixo Z:</p>\r\n                        <input");
            EndContext();
            BeginWriteAttribute("id", "  id=\"", 4171, "\"", 4183, 2);
#line 100 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 4177, x, 4177, 2, false);

#line default
#line hidden
            WriteAttributeValue(" ", 4179, "avz", 4180, 4, true);
            EndWriteAttribute();
            BeginContext(4184, 21, true);
            WriteLiteral(" class=\"form-control\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 4205, "\"", 4228, 1);
#line 100 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 4213, avz.ToString(), 4213, 15, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4229, 189, true);
            WriteLiteral(" />\r\n                    </div>\r\n                    <div class=\"col-auto mt-3\">\r\n                        <p>ação:</p>\r\n                        <button class=\"btn btn-primary\" type=\"button\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 4418, "\"", 4439, 3);
            WriteAttributeValue("", 4428, "altnome(", 4428, 8, true);
#line 104 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
WriteAttributeValue("", 4436, x, 4436, 2, false);

#line default
#line hidden
            WriteAttributeValue("", 4438, ")", 4438, 1, true);
            EndWriteAttribute();
            BeginContext(4440, 203, true);
            WriteLiteral(">Salvar </button>\r\n                        <button class=\"btn btn-danger\" type=\"button\" onclick=\"falhaReset()\">Reset</button>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n");
            EndContext();
#line 109 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.VTX\DXM.Web.Interface\Views\Config\Index.cshtml"
            }
        }

    }

#line default
#line hidden
            BeginContext(4678, 4592, true);
            WriteLiteral(@"
</div>





<script>

    var editT_p_prog = false



    function altnome(valor) {

        var nome = document.getElementById(`l ${valor}`).value;
        var a_t = document.getElementById(`${valor} at`).value;
        var a_vx = document.getElementById(`${valor} avx`).value;
        var a_vz = document.getElementById(`${valor} avz`).value;
        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                if (re == ""ok"") {
                    toastr.success(""dados armazenados"", ""Sucesso"")
                }
                else {
                    toastr.error(re, ""erro"")
                }
            }
        }
        xhp.open(""Get"", `/Config/setLinhaNome?id=${valor}&valor=${nome}&t=${a_t}&vx=${a_vx}&vz=${a_vz}`);
        xhp.send();
    }

    function velAlt(id) {
        document.getElementById(`${id} velo_esp`).value = """);
            WriteLiteral(@"""
    }

    function altIp() {
        document.getElementById(""splint"").innerHTML = ""<span class=\""spinner-border spinner-border-sm mr-1\""></span>Alterando..."";

        var ip = document.getElementById(""endress"").value;

        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                setTimeout(document.location.reload(), 10000)
            }
        }
        xhp.open(""Get"", `/Config/setIp?ip=${ip}`);
        xhp.send();
    }



    function linhaAltera() {
        document.getElementById(""splint2"").innerHTML = ""<span class=\""spinner-border spinner-border-sm mr-1\""></span>Alterando..."";
        var valor = document.getElementById(""linhas"").value
        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseT");
            WriteLiteral(@"ext
                setTimeout(document.location.reload(), 2000)
            }
        }
        xhp.open(""Get"", ""/Config/setLinhas?valor="" + valor);
        xhp.send();
    }

    function tickAltera() {
        var valor = document.getElementById(""tickLog"").value
        var xhp = new XMLHttpRequest()

        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                setTimeout(document.location.reload(), 2000)
            }
        }
        valor = valor * 60
        xhp.open(""Get"", ""/Config/setTickLog?valor="" + valor);
        xhp.send();
    }

    function agendadoChange(id, x) {
        var valor = document.getElementById(id).value
        var temp = """"
        var temph = """"
        var tempm = """"
        if (valor.indexOf("":"") > 0) {

            if (valor.length > 7) {
                temph = `${valor.substr(1, 1)}${valor.substr(5, 1)}`
                tempm = valo");
            WriteLiteral(@"r.substr(6, 2)
            }
            else {
                temph = valor.substr(0, 2)
                tempm = valor.substr(6, 2)
            }
            temp = `${temph}${tempm}`
            valor = """"
        }

        if (valor != """") {
            for (var x = valor.length; x < 4; x++) {
                temp = `0${temp}`
            }

            temp = temp + valor



            if (temp.length > 4) {
                temp = temp.substring(temp.length - 4, 5)
            }

            temph = temp.substr(0, 2)
            tempm = temp.substr(2, 2)
        }

        temp = `${temph} : ${tempm}`

        if (temp.length < 7) { temp = """" }
        document.getElementById(id).value = temp
        input_h_p_pro[x] = parseInt(temph) * 60 + parseInt(tempm)
        //alert(input_h_p_pro[x])
    }
    function t_p_progBtnF(id) {
        editT_p_prog = true;
        document.getElementById(id).value = """"
    }
    function falhaReset()
    {
        var xhp = new X");
            WriteLiteral(@"MLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                if (re == ""ok"") {
                    toastr.success(""Ação Executada"", ""Sucesso"")
                }
                else {
                    toastr.error(re, ""erro"")
                }
            }
        }
        xhp.open(""Get"", `/Config/resetMotor`)
        xhp.send();
    }

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DXM.VTX.VTX> Html { get; private set; }
    }
}
#pragma warning restore 1591
