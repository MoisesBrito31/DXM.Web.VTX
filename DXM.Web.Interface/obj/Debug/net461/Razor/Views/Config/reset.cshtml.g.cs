#pragma checksum "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\Config\reset.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "63322ecb617cce872c496f9772d0a21098bf47d7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Config_reset), @"mvc.1.0.view", @"/Views/Config/reset.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Config/reset.cshtml", typeof(AspNetCore.Views_Config_reset))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\_ViewImports.cshtml"
using DXM.Web.Interface;

#line default
#line hidden
#line 2 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\_ViewImports.cshtml"
using DXM.Web.Interface.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"63322ecb617cce872c496f9772d0a21098bf47d7", @"/Views/Config/reset.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3dbfc5f91b30706872d88ad7a7fe2ce93e5d6979", @"/Views/_ViewImports.cshtml")]
    public class Views_Config_reset : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Moises Brito\Documents\GitHub\DXM.Web.Interface\DXM.Web.Interface\Views\Config\reset.cshtml"
  
    ViewData["Title"] = "reset";

#line default
#line hidden
            BeginContext(43, 7832, true);
            WriteLiteral(@"
<div class=""card-title mt-5 mb-5"">
    <div class=""row mb-5"">
        <div class=""col text-left"">
            <h2>Configuração do DXM</h2>
        </div>
        <div class=""col text-right  btn-group"">
            <button type=""button"" class=""btn btn-primary"" onclick=""document.location.href='/config/index'"">Rede</button>
            <button type=""button"" class=""btn btn-primary "" onclick=""document.location.href='/config/turno'"">Turno</button>
            <button type=""button"" class=""btn btn-primary "" onclick=""document.location.href='/config/mapIo'"">Mapa I/O</button>
            <button type=""button"" class=""btn btn-primary"" onclick=""document.location.href='/config/DxmConfig'"">Programar</button>
            <button type=""button"" class=""btn btn-primary  disabled"" onclick=""document.location.href='/config/reset'"">Destravar</button>
        </div>
    </div>
    <hr>

</div>


<div class=""container-fluid"">
    <div class=""m-auto"" style=""max-width:600px"">
        <h2 class=""text-center"">Liberção");
            WriteLiteral(@" do DXM para Uso</h2>
        <p>
            O processo que se segue ira desbloquear o uso de arquivos do DXM <br />
            Todos os aquivos de Log serão apagados, recomenda-se o download do mesmo antes de continuar<br />
            Atenção! Durante o processo não desligue ou desconecte o DXM da rede
        </p>
    </div>
    <div class=""m-auto pt-4 pb-4"" style=""max-width:200px"">
        <h3 class=""text-center"">
            <span id=""estado"" class=""text-success""></span>
        </h3>
    </div>
    <div class=""m-auto pt-4 pb-4"" style=""max-width:200px"">
        <button id=""butInicia"" class=""btn btn-block btn-success "" type=""button"" onclick=""iniciar()"">
            <span id=""splint"" class=""spinner-border spinner-border-sm"" style=""visibility:collapse""></span>
            <span id=""butInfo"">Iniciar</span>
        </button>

    </div>
    <div id=""barra"" class=""progress m-auto"" style=""height:40px; max-width:600px"">
        <div id=""progress"" class=""progress-bar progress-bar-striped pr");
            WriteLiteral(@"ogress-bar-animated bg-success"" style=""width:0%;""></div>
    </div>
</div>

<script type=""text/javascript"">
      var barra = document.getElementById(""progress"");
    var butInicia = document.getElementById(""butInicia"");
    var infoInicia = document.getElementById(""butInfo"");
    var roda = document.getElementById(""splint"");
    var percent = 0;


    function inicio() {         
         var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                //alert(re);
                if (re == ""travado"") {
                    document.getElementById(""estado"").innerHTML = ""Travado"";
                    document.getElementById(""estado"").setAttribute(""class"", ""text-danger"");
                    infoInicia.innerHTML = ""Destravar"";
                   
                }
                else {
                    document.getElementById(""estado"").innerHTML = """);
            WriteLiteral(@"Desbloqueado"";
                    document.getElementById(""estado"").setAttribute(""class"", ""text-success"");
                    document.getElementById(""butInicia"").setAttribute(""class"", ""invisible"")
                    document.getElementById(""barra"").setAttribute(""style"", ""visibility:hide"");
                    document.getElementById(""progress"").setAttribute(""style"", ""visibility:hide"");
                }
            }
        }
        xhp.open(""Get"", ""/Config/getEstado"");
        xhp.send();
    }
   
    inicio();

  

    function iniciar() {
        percent = 0;
        infoInicia.innerHTML = ""Em processo"";
        roda.setAttribute(""style"", ""visibility:visible"");
        barUpdate();
        travado();
    }
    function barUpdate() {
        percent += 10;
        barra.setAttribute(""style"", `width:${percent}%`);
    }
    function fim() {
        toastr.success(""DXM Desbloqueado"", ""Sucesso"");      
       
        barra.setAttribute(""style"", `width:100%`);
        setT");
            WriteLiteral(@"imeout(function () {
            document.location.href = ""/Config/reset"";
        }, 3000);
    }
    function falha() {
        infoInicia.innerHTML = ""Reiniciar"";
        roda.setAttribute(""style"", ""visibility:collapse"");
        barra.setAttribute(""style"", `width:0%`);
    }
    function travado() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
                //alert(re);
                if (re == ""travado"") {
                    barUpdate();
                    destravar();
                }
                else {
                    fim();
                }
            }
        }
        xhp.open(""Get"", ""/Config/getEstado"");
        xhp.send();
    }
    function exist() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
      ");
            WriteLiteral(@"          var re = this.responseText               
                if (re == ""ok"") {
                    barUpdate();
                    deleteFile();
                }
                else {
                    fim();
                }
            }
        }
        xhp.open(""Get"", ""/Config/exist?file=OEE.sb"");
        xhp.send();
    }
    function deleteFile() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText               
                if (re == ""ok"") {
                    barUpdate();
                    deletelog1();
                }
                else {
                    barUpdate();
                    deletelog1();
                }
            }
        }
        xhp.open(""Get"", ""/Config/fileDelete?file=OEE.sb"");
        xhp.send();
    }
    function deletelog1() {
        var xhp = new XMLHttpRequest()
        x");
            WriteLiteral(@"hp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText               
                if (re == ""ok"") {
                    barUpdate();
                    deletelog2();
                }
                else {
                    barUpdate();
                    deletelog2();
                }
            }
        }
        xhp.open(""Get"", ""/Config/fileDelete?file=SbFile1.dat"");
        xhp.send();
    }
    function deletelog2() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText               
                if (re == ""ok"") {
                    barUpdate();
                    fim();
                }
                else {
                    fim();
                }
            }
        }
        xhp.open(""Get"", ""/Config/fileDelete?file=LogF");
            WriteLiteral(@"ile1.txt"");
        xhp.send();
    }
    function destravar() {
        var xhp = new XMLHttpRequest()
        xhp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                var re = this.responseText
               
                if (re == ""ok"") {
                    barUpdate();
                    exist()
                }
                else {
                    toastr.error(""erro"", ""Falha ao destravar DXM"")
                    falha();
                }
            }
        }
        xhp.open(""Get"", ""/Config/destravar"");
        xhp.send();
    }
    
 

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
